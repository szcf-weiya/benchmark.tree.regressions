name: Bot for New CSV data

on:
  issues:
    types: [opened]

jobs:
  create-pr:
    if: contains(github.event.issue.title, '@new-csv')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.name "new-csv[bot]"
          git config --global user.email "new-csv[bot]@users.noreply.github.com"

      - name: Parse command arguments
        id: parse
        run: |
          comment="${{ github.event.issue.title }}"
          # Strip "@new-csv " and extract args
          # @new-csv DataName URL Idx_of_Response
          command=$(echo "$comment" | sed 's/@new-csv //')
          DataName=$(echo "$command" | awk '{print $1}')
          DataURL=$(echo "$command" | awk '{print $2}')
          DataY=$(echo "$command" | cut -d' ' -f3-)

          echo "DataName=$DataName" >> $GITHUB_ENV
          echo "DataURL=$DataURL" >> $GITHUB_ENV
          echo "DataY=$DataY" >> $GITHUB_ENV
#
#       - name: Generate R function
#         run: |
#           function_code=$(cat <<EOF
#
# # ---- Appended by @new-csv ----
# real_$DataName = function(prefix = "./real_data/") {
#   destfolder = file.path(prefix, "$DataName/")
#   destfile = file.path(destfolder, "data.csv")
#   if (!file.exists(destfile)) {
#     if (!dir.exists(destfolder))
#       dir.create(destfolder, recursive = T)
#     download_with_retry($DataURL, destfile)
#   }
#   # assume no header
#   # header name is separate in this dataset repo: https://github.com/jbrownlee/Datasets
#   df = read.csv(destfile, header = FALSE)
#   list(x = as.matrix(df[, -$DataY]),
#        y = df[,$DataY])
# }
#
# EOF
# )
#           echo -e "$function_code" >> R/datasets.R
#
#       # Set up R environment
#       - name: Set up R
#         uses: r-lib/actions/setup-r@v2
#
#       - name: Append Real Data Entry
#         shell: Rscript {0}
#         run: |
#           DataName = Sys.getenv("DataName")
#           DataURL = Sys.getenv("DataURL")
#           source("benchmark-tree-regressions/choices.real.data.R")
#           choices.real.data[[DataName]] = DataName
#           ## not modified real.data.meta here, since it require more dependencies for R
#           ## check when running?
#           # real.data.meta = readRDS("benchmark-tree-regressions/real-data-meta.rds")
#           # real.data.meta = rbind(real.data.meta,
#           #   c(DataName, )
#           #   )

      - name: Create commit
        run: |
          git checkout -b new-csv/update-$DataName
          git add .
          git commit -m "add new csv $DataName"
          git push origin new-csv/update-$DataName

      - name: Create pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "add new csv $DataName"
          title: "add new csv $DataName"
          body: "add new csv $DataName"
          branch: new-csv/update-$DataName
