name: Run Scripts

on: [push]

# Define the workflow jobs
jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up R environment
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 4.1.2

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libgsl-dev libboost-dev libcurl4-openssl-dev
        gsl-config --libs
        gsl-config --cflags

    - name: Cache renv library
      uses: actions/cache@v3
      with:
        path: renv/library
        key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}
        restore-keys: |
          ${{ runner.os }}-renv-

    # Step 3: Install R package dependencies (if any)
    - name: Install R package dependencies
      run: |
        install.packages("renv")
        renv::restore()  # Restores packages from the lockfile (if using renv)
      shell: Rscript {0}

    - name: Run R script
      run: |
        Rscript run.R

    # Step 5: Save the results (as an artifact)
    - name: Upload results as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: results
        path: benchmark-tree-regressions/res-action.rds  # This should point to where the results are saved

  build:
    if: github.ref == 'refs/heads/master'
    needs: run-script

    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: rstudio/shiny-workflows/setup-r-package@v1
        with:
          packages: |
            posit-dev/r-shinylive
            bslib
            ggplot2
            plotly
          cache-version: ${{ github.event.inputs.cache-version }}

      - name: Display structure of downloaded files
        run: ls -R benchmark-tree-regressions

      # download artifacts
      - uses: actions/download-artifact@v4
        with:
          name: results
          path: benchmark-tree-regressions

      - name: Build site
        shell: Rscript {0}
        run: |
          shinylive::export("benchmark-tree-regressions/", "site")

      - name: Upload site artifact
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "site"

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

